{
  "swagger": "2.0",
  "info": {
    "description": "Hifive football api",
    "version": "1.0.0",
    "title": "HifiveFootball",
    "termsOfService": "http://api.hifivefootball.com/",
    "contact": {
      "email": "ddastudio@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "api.hifivefootball.com:5300",
  "basePath": "/v1",
  "tags": [
    {
      "name": "settings",
      "description": "app envoriemnt , get active bord list"
    },
    {
      "name": "boards",
      "description": "content header list"
    },
    {
      "name": "bests",
      "description": "베스트게시판"
    },
    {
      "name": "contents",
      "description": "content"
    },
    {
      "name": "comments",
      "description": "comment"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "login"
    },
    {
      "name": "issue",
      "description": "issue board"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/settings/boards": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "getBoardList",
        "description": "",
        "operationId": "getBoardList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "useyn",
            "description": "useyn ",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Board"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "getBoardALLContentList",
        "description": "",
        "operationId": "getBoardALLContentList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": true,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "offset of",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/boards/{id}": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "getBoardContentList",
        "description": "",
        "operationId": "getBoardContentList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "board id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": true,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "offset of",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/boards/{id}/best": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "getBestBoards",
        "description": "",
        "operationId": "getBestBoards",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "board id",
            "required": true,
            "type": "integer",
            "default": 200
          },
          {
            "in": "query",
            "name": "bestid",
            "description": "yyyymmdd (20171108)",
            "required": true,
            "type": "string",
            "default": "20171108"
          },
          {
            "in": "query",
            "name": "type",
            "description": "best content type (D daily, W week, M month , Y year ->> default D )",
            "required": false,
            "type": "string",
            "default": "D"
          },
          {
            "in": "query",
            "name": "roll",
            "description": "best content roll (C comment, L like ->> default C )",
            "required": false,
            "type": "string",
            "default": "C"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": true,
            "type": "number",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "offset of",
            "required": true,
            "type": "number",
            "default": 15
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/boards/{id}/issue": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "getIssueBoardContentList",
        "description": "",
        "operationId": "getIssueBoardContentList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "board id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": true,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "content count (default 15)",
            "required": false,
            "type": "number"
          },
          {
            "name": "closed",
            "in": "query",
            "description": "open = 0 close = 1(default open)",
            "required": false,
            "type": "number"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/bests": {
      "get": {
        "tags": [
          "bests"
        ],
        "summary": "getBoardALLContentList",
        "description": "",
        "operationId": "getBoardALLBestContentList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bestid",
            "description": "yyyymmdd (20171108)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "best content type (D daily, W week, M month , Y year ->> default D )",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "roll",
            "description": "best content roll (C comment, L like ->> default C )",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": false,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "offset of",
            "required": false,
            "type": "number"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/bests/{boardid}": {
      "get": {
        "tags": [
          "bests"
        ],
        "summary": "getBoardContentList",
        "description": "",
        "operationId": "getBoardBestContentList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardid",
            "description": "board id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "bestid",
            "description": "yyyymmdd (20171108)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "best content type (D daily, W week, M month , Y year ->> default D )",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "roll",
            "description": "best content roll (C comment, L like ->> default C )",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset of",
            "required": false,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "offset of",
            "required": false,
            "type": "number"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "content",
        "description": "login",
        "operationId": "login by id, pw",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "username",
            "description": "userid",
            "required": true,
            "default": "2222",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "password",
            "description": "pw",
            "required": true,
            "type": "string",
            "default": "2222"
          }
        ],
        "responses": {
          "200": {
            "description": "login success",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/AuthModel"
              }
            }
          },
          "400": {
            "description": "login fail",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "content",
        "description": "refresh access token",
        "operationId": "refresh access token ",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "refresh_token",
            "required": true,
            "default": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjUsInVzZXJuYW1lIjoicGFpciIsImF1ZGllbmNlIjoiaGlmaXZlc29jY2VyLmNvbSIsImlhdCI6MTUxMjQ0ODU3NywiZXhwIjoxNTEyNTU2NTc3fQ.FJTjCz6UPFah-2hU7mGkvHrp5E6klflGdoCeJTC6NpM",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "get refreshToken",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/AuthRefreshTokenModel"
              }
            }
          },
          "400": {
            "description": "login fail",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/issue": {
      "post": {
        "tags": [
          "issue"
        ],
        "summary": "content",
        "description": "post content",
        "operationId": "postIssue",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "name": "boardid",
            "in": "formData",
            "description": "700 is issue board",
            "required": true,
            "type": "string",
            "default": 700
          },
          {
            "name": "title",
            "in": "formData",
            "description": "offset of",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "offset of",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "offset of",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "json [\"ronaldo\", \"messi\"]",
            "required": false,
            "type": "string"
          },
          {
            "name": "imgs",
            "in": "formData",
            "description": "json",
            "required": false,
            "type": "string"
          },
          {
            "name": "bodytype",
            "in": "formData",
            "description": "1 html , 2 text , 3 external link",
            "required": false,
            "type": "integer",
            "enum": [
              1,
              2,
              3
            ],
            "default": 1
          },
          {
            "name": "platform",
            "in": "formData",
            "description": "1 android 2 ios 3 web, 아마 안쓸것임",
            "required": false,
            "type": "integer",
            "enum": [
              1,
              2,
              3
            ],
            "default": 3
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/issue/{id}": {
      "get": {
        "tags": [
          "issue"
        ],
        "summary": "Finds issue by id",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "getIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "issueid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/contents": {
      "post": {
        "tags": [
          "contents"
        ],
        "summary": "content",
        "description": "post content",
        "operationId": "postContent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "post board  //form data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostContentBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "contents"
        ],
        "summary": "content",
        "description": "update content",
        "operationId": "putContent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "post board  //form data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutContentBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "tags": [
          "contents"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "getContent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "content id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "array",
              "items": {
                "type": "null"
              }
            }
          }
        }
      }
    },
    "/contents/{id}/like": {
      "put": {
        "tags": [
          "contents"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "contentsetlike",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "content id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/contents/{id}/unlike": {
      "put": {
        "tags": [
          "contents"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "contentsetunlike",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "content id",
            "required": true,
            "type": "integer",
            "default": 3150
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/contents/{id}/scrap": {
      "post": {
        "tags": [
          "contents"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "contentscrap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "content id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "contents"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "contentunscrap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "content id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "get comments of content",
        "description": "get comments of content",
        "operationId": "getComments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "contentid",
            "description": "content id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentHeader"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "content",
        "description": "post content",
        "operationId": "postContent2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "post board",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCommentBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "fail"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "content",
        "description": "post content",
        "operationId": "updateComment",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "post board",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCommentBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "fail"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/comemnt/{id}": {
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "content",
        "description": "post content",
        "operationId": "deleteComment",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "commentid",
            "required": true,
            "type": "integer"
          },
          {
            "in": "formData",
            "name": "contentid",
            "description": "content_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "delete",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "fail"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/comments/{id}/like": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "comment like",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "comment id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    },
    "/comments/{id}/unlike": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "comment unlike",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "comment id",
            "required": true,
            "type": "integer",
            "default": 3150
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "user authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          },
          "400": {
            "description": "하이파이브 등록 실패",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiResponse2"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Board": {
      "type": "object",
      "properties": {
        "board_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "type_gb": {
          "type": "string"
        },
        "group": {
          "type": "integer"
        },
        "img_url": {
          "type": "string"
        }
      },
      "xml": {
        "name": "board"
      }
    },
    "ContentHeader": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "arena_id": {
          "type": "integer"
        },
        "deleted": {
          "type": "integer"
        },
        "reported": {
          "type": "integer"
        },
        "comments": {
          "type": "integer"
        },
        "scraps": {
          "type": "integer"
        },
        "board_id": {
          "type": "integer"
        },
        "preview": {
          "type": "string"
        },
        "likers": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        },
        "bodytype": {
          "type": "integer"
        },
        "celltype": {
          "type": "integer"
        },        
        "link": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "user_action": {
          "$ref": "#/definitions/UserAction"
        }
      },
      "xml": {
        "name": "ContentHeader"
      }
    },
    "Issue": {
      "type": "object",
      "properties": {
        "issue_id": {
          "type": "string"
        },
        "closed": {
          "type": "integer"
        },
        "activity": {
          "type": "string"
        },
        "progress": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "platform": {
          "type": "integer"
        },
        "content": {
          "$ref": "#/definitions/Content"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "user_action": {
          "$ref": "#/definitions/UserAction"
        }
      }
    },
    "Content": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "integer"
        },
        "board_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "arena_id": {
          "type": "integer"
        },
        "comments": {
          "type": "integer"
        },
        "likers": {
          "type": "integer"
        },
        "scraps": {
          "type": "integer"
        },
        "tags": {
          "type": "string"
        },
        "imgs": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "deleted": {
          "type": "integer"
        },
        "reported": {
          "type": "integer"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        },
        "allow_comment": {
          "type": "integer"
        },
        "bodytype": {
          "type": "integer"
        },
        "celltype": {
          "type": "integer"
        },         
        "link": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "user_action": {
          "$ref": "#/definitions/UserAction"
        }
      },
      "xml": {
        "name": "Content"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "integer"
        },
        "group_id": {
          "type": "integer"
        },
        "depth": {
          "type": "integer"
        },
        "parent_id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "likers": {
          "type": "integer"
        },
        "deleted": {
          "type": "integer"
        },
        "reported": {
          "type": "integer"
        },
        "created": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "user_action": {
          "$ref": "#/definitions/UserAction"
        }
      },
      "xml": {
        "name": "Comment"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserAction": {
      "type": "object",
      "properties": {
        "like": {
          "type": "integer"
        },
        "scrap": {
          "type": "integer"
        },
        "hasImgs": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "user_action"
      }
    },
    "PostContentBody": {
      "type": "object",
      "properties": {
        "board_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "imgs": {
          "type": "string"
        },
        "bodytype": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ]
        },
        "celltype": {
          "type": "integer"
        },         
        "allowcomment": {
          "type": "integer"
        },
        "link": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PostContent"
      }
    },
    "PutContentBody": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "integer"
        },
        "board_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "preview": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "imgs": {
          "type": "string"
        },
        "bodytype": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ]
        },
        "celltype": {
          "type": "integer"
        },         
        "allowcomment": {
          "type": "integer"
        },
        "link": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PutContent"
      }
    },
    "PostCommentBody": {
      "type": "object",
      "properties": {
        "contentid": {
          "type": "integer"
        },
        "parentid": {
          "type": "integer"
        },
        "groupid": {
          "type": "integer"
        },
        "depth": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PostContent"
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ApiResponse2": {
      "type": "object",
      "properties": {
        "result": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AuthModel": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int32"
        },
        "token_type": {
          "type": "string"
        }
      }
    },
    "AuthRefreshTokenModel": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer",
          "format": "int32"
        },
        "token_type": {
          "type": "string"
        }
      }
    },
    "LoginModel": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}